# Legacy and iconic sites {#sec-legacy-sites}

In this section we discuss our approach to account for legacy and iconic sites in the sampling design.
Legacy sites are historical or current surveys in which locations were randomly chosen, in contrast to iconic sites, which are obtained from non-random surveys.
These sites are particularly important in Quebec, where there are a large number of legacy and iconic sites (@fig-legacy-sites).
Given the high cost of sampling in remote regions and the limited resources available to sample, it is essential to take historical sites into account in order to make the most efficient use of limited resources to extend spatial coverage to under-sampled areas.

The latest method to integrate legacy and iconic sites is developed in @Foster2021.
They use the position of each historical site to reduce the inclusion probability of neighboring sites following a kernel distribution, where the legacy effect decreases with distance from a historical site.
However, their approach to incorporate legacy and iconic sites do not explicitly consider the amount of historical sites, nor the spatial randomness of their distribution.
In fact, their approach naturally ensures randomnly selected sites, as they use only legacy sites while excluding iconic ones.
They justify the exclusion of iconic sites, since these sites are usually special cases that may not represent the population and therefore generate a biased sample.
Although we agree with the authors, we prioritised expanding the spatial coverage of samples by reducing the sample size of regions that have been well covered by legacy and iconic sites.

In the following section we describe the historical sites for the study area.
Then, we use two ecoregions as examples to discuss the decision to also consider sample size while accounting for historical sites.
In the next chapter we describe our novel approach to account for the spatial randomness of historical sites to adjust the inclusion probability and the sample size.
Finally, we briefly describe previous experimentations to incorporate historical sites.

## Historical sites in Quebec

```{r legacyFigure,echo=FALSE,message=FALSE,warning=FALSE,fig.width=8,fig.height=8}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(sf))
suppressPackageStartupMessages(library(ggtext))

# load layers
area = readRDS(file.path('data', 'area.RDS'))

legacy <- read_csv(file.path('Report', 'data', 'legacySites.csv')) |>
        st_as_sf(
            coords = c('longitude', 'latitude'),
            crs = st_crs(4326)
        ) |>
        mutate(Source = str_replace(Source, "'", ""))

#plot
area |>
    ggplot() +
    geom_sf(color = 'grey') +
    geom_sf(data = legacy, aes(color = Source), size = .5) +
    coord_sf(crs = 4326) +
    theme_minimal() +
    xlab('') + ylab('')
```


## Why should we consider sample size?

Here we show an example using two ecoregions in which historical sites have different spatial distribution.
While the ecoregion 101S has evenly distributed historical sites over space, the ecoregion 217 present most of its historical sites around roads.

```{r importLegacy, echo=FALSE}

# parameters

# Maximum proportion of NA pixels (non-habitat) in a hexagon
# if 0.8, it means an hexagon has to have at least 20% of habitat pixels
prop_na = 0.8

# Percentage of hexagons to cover a region
sample_effort = 0.02

# Total sample size for SSU (Main + Over)
# It must be a even number
ssu_N = 6

# Number of replications when running the GRTS
nb_rep = 15

# Ecoregions
eco_sim <- c(
    '7', '28', '30', '31',
    '46', '47', '48', '49',
    '73', '77', '78', '86',
    '72', '74', '75', '76',
    '96', #'96N', '96S',
    '99',
    '100', #'100N', '100S',
    '101', '101N', '101S',
    '102',
    '103', #'103N', '103S',
    '117',
    '216',
    '217'#, '217N', '217S'
)

# Buffer size (in Km) to adjust sample size given nb of legacy sites
bufferSize_N = 18

# Buffer size (in Km) to adjust inclusion probability around legacy sites
bufferSize_p = 10



# Prepare hexagons

hexas <- readRDS(file.path('data', 'hexa_complete.RDS')) |>
    filter(propNA <= prop_na) |>
    filter(ecoregion %in% eco_sim) |>
    mutate(
        p = (hab_prob * cost_prob) / sum(hab_prob * cost_prob)
    ) |>
    filter(p != 0)

#



# legacy sites

# function to transform Latitude & longitude legacy site points in a table
# with the number of points per hexagon ID (ET_Index)
import_legacySites <- function(File, lat_name, lon_name)
{
    hx <- hexas %>%
        st_transform(4326)
    
    # read file
    lg <- read_csv(File) %>%
        rename(
            lat = all_of(lat_name),
            lon = all_of(lon_name)
        ) %>%
        st_as_sf(
            coords = c('lon', 'lat'),
            crs = st_crs(hx)
        )

    # intersect
    nbLegacy <- hx %>%
        st_contains(lg, sparse = FALSE) %>%
        apply(1, sum)

    tibble(
        ET_Index = hx$ET_Index,
        legacyNew = nbLegacy
    ) %>%
    filter(legacyNew > 0)
}


# load and transform legacy info
legacySites <- import_legacySites(
    File = file.path('data', 'SitesLegacy_GRTS20220314.csv'),
    lat_name = 'Lat_DegDecValide',
    lon_name = 'Long_DegDecValide'
)

# merge to hexagons
hexas <- hexas %>%
    left_join(legacySites) %>%
    mutate(
        legacyNew = replace_na(legacyNew, 0),
        legacy = legacySite + legacyNew
    )
```

Sampling using a spatially balanced design while ignores historical sites for the two ecoregions:

```{r runGRTS_eco101,echo=FALSE,message=FALSE,warning=FALSE,fig.width=10,fig.height=8}
#| label: fig-sampleSize-example1
#| fig-cap: "Example of when sampling sites (red dots) using the spatially balanced design without taking historical sites into account. Ecoregion 101S and 207 are two examples of legacy sites in which the legacy sites (blue dots) are evenly and non-uniformly distributed in space, respectively."
#| layout-ncol: 2

set.seed(0)

Stratdsgn = c('eco_101S' = 114, 'eco_217' = 46)

sampleFrame <- hexas %>%
        mutate(    
            eco_name = paste0('eco_', ecoregion), # to match design name
            mdcaty  = sum(Stratdsgn) * p/sum(p),
            geometry = sf::st_geometry(sf::st_centroid(geometry))
        )

out_sample <- grts(
    sframe = sampleFrame,
    n_base = Stratdsgn,
    stratum_var = 'eco_name',
    aux_var = 'mdcaty'
)

ggplot() +
    geom_sf(data = st_union(subset(hexas, ecoregion == '101S'))) +
    geom_sf(data = subset(hexas, ET_Index %in% out_sample$sites_base$ET_Index[which(out_sample$sites_base$ecoregion == '101S')]), fill = 'red', color = 'transparent') +
    geom_sf(data = subset(hexas, ecoregion == '101S' & legacySite > 0), fill = 'blue', color = 'transparent', alpha = 0.5) +
    ggtitle("**Ecoregion 101S**<br><span style='color:red'>Sample size</span> without adj = 114; <span style='color:blue'>Legacy sites</span> = 1033") +
    coord_sf(crs = 4326) +
    theme_minimal() +
    theme(
        legend.position = 'none',
        plot.title = element_markdown()
    ) +
    xlab('') + ylab('')

ggplot() +
    geom_sf(data = st_union(subset(hexas, ecoregion == '217'))) +
    geom_sf(data = subset(hexas, ET_Index %in% out_sample$sites_base$ET_Index[which(out_sample$sites_base$ecoregion == '217')]), fill = 'red', color = 'transparent') +
    geom_sf(data = subset(hexas, ecoregion == '217' & legacySite > 0), fill = 'blue', color = 'transparent', alpha = 0.5) +
    ggtitle("**Ecoregion 217**<br><span style='color:red'>Sample size</span> without adj = 46; <span style='color:blue'>Legacy sites</span> = 96") +
    coord_sf(crs = 4326) +
    theme_minimal() +
    theme(
        legend.position = 'none',
        plot.title = element_markdown()
    ) +
    xlab('') + ylab('')
```

Now sampling using the same design, but adjusting the inclusion probability of sites in function of the distance to historical sites:

```{r runGRTS_eco101_adj,echo=FALSE,message=FALSE,warning=FALSE,fig.width=10,fig.height=8}
#| label: fig-sampleSize-example2
#| fig-cap: "Example of when sites are sampled from a design in which only the inclusion probability is adjusted when incorporating historical sites. Ecoregion 101S and 207 are two examples of legacy sites in which the legacy sites (blue dots) are evenly and non-uniformly distributed in space, respectively."
#| layout-ncol: 2

# Coordinates of all hexagons in matrix format for MBHdesign
coord_mt <- sampleFrame %>%
    st_coordinates()

# Coordinates of legacy hexagons
legacySites <- sampleFrame %>%
    filter(legacy > 0) %>%
    st_coordinates()

sampleFrame$adj_p <- MBHdesign::alterInclProbs(
    legacy.sites = legacySites,
    potential.sites = coord_mt,
    inclusion.probs = sampleFrame$mdcaty,
    sigma = 10000
)

out_sample_adjP <- spsurvey::grts(
    sframe = sampleFrame,
    n_base = Stratdsgn,
    stratum_var = 'eco_name',
    aux_var = 'adj_p'
)

ggplot() +
    geom_sf(data = st_union(subset(hexas, ecoregion == '101S'))) +
    geom_sf(data = subset(hexas, ET_Index %in% out_sample_adjP$sites_base$ET_Index[which(out_sample_adjP$sites_base$ecoregion == '101S')]), fill = 'red', color = 'transparent')+
      geom_sf(data = subset(hexas, ecoregion == '101S' & legacySite > 0), fill = 'blue', color = 'transparent', alpha = 0.5) +
    ggtitle("**Ecoregion 101S**<br><span style='color:red'>Sample size</span> without adj = 114; <span style='color:blue'>Legacy sites</span> = 1033") +
    coord_sf(crs = 4326) +
    theme_minimal() +
    theme(
        legend.position = 'none',
        plot.title = element_markdown()
    ) +
    xlab('') + ylab('')


ggplot() +
    geom_sf(data = st_union(subset(hexas, ecoregion == '217'))) +
    geom_sf(data = subset(hexas, ET_Index %in% out_sample_adjP$sites_base$ET_Index[which(out_sample_adjP$sites_base$ecoregion == '217')]), fill = 'red', color = 'transparent')+
      geom_sf(data = subset(hexas, ecoregion == '217' & legacySite > 0), fill = 'blue', color = 'transparent', alpha = 0.5) +
    ggtitle("**Ecoregion 217**<br><span style='color:red'>Sample size</span> without adj = 46; <span style='color:blue'>Legacy sites</span> = 96") +
    coord_sf(crs = 4326) +
    theme_minimal() +
    theme(
        legend.position = 'none',
        plot.title = element_markdown()
    ) +
    xlab('') + ylab('')
```
